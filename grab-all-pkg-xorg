#!/bin/bash

# A script to automatically grab all useful pkg-xorg packages from git and add upstream remotes
# Also used to update them all.
# 2010 Robert Hooker, Tormod Volden, Bryce Harrington

# Set empty to use anonymous access
ALIOTH_USER="sarvatt-guest"

VIDEO="apm ark ati chips cirrus dove dummy fbdev glide glint i128 i740 intel ivtvdev mach64 \
mga neomagic newport nouveau nv openchrome qxl r128 radeonhd rendition s3 s3virge savage \
siliconmotion sis sisusb suncg14 suncg3 sunffb sunleo suntcx tdfx tga trident tseng v4l vesa \
vmware voodoo"

INPUT="acecad aiptek citron elographics evdev evtouch fpit hyperpen \
joystick keyboard mouse mutouch penmount synaptics vmmouse void"

APP="compiz grandr twm x11-apps x11-session-utils x11-utils x11-xfs-utils x11-xkb-utils \
x11-xserver-utils xauth xbacklight xdm xfs xinit xprint-utils xterm xutils-dev xutils"

LIBS="libdmx libdrm libfontenc libfs libice libpciaccess libsm libx11 libxau libxaw \
libxcomposite libxcursor libxdamage libxdmcp libxext libxfixes libxfont libxi libxinerama \
libxkbfile libxmu libxp libxpm libxprintapputil libxprintutil libxrandr libxrender \
libxres libxss libxt libxtst libxv libxvmc libxxf86dga libxxf86vm mesa pixman xft xtrans"

PROTO="bigreqs composite core damage dmx dri2 fixes fonts gl input kb print randr record \
render resource scrnsaver video xcmisc xext xf86bigfont xf86dga xf86dri xf86misc xf86vidmode \
xinerama"


# Include the bash library functions
. $(dirname $0)/xorg-pkg-tools.lib

if [ -n "$ALIOTH_USER" ]; then
    PKG_XORG=git+ssh://$ALIOTH_USER@alioth.debian.org/git/pkg-xorg
    echo "Updating using the account $ALIOTH_USER"
else
    PKG_XORG=git://git.debian.org/git/pkg-xorg
fi
XORG_GIT=git://anongit.freedesktop.org/xorg

ROOTDIR=$PWD
echo -e "\e[1;34mStarting with the video drivers..."
for VPKG in $VIDEO; do
	echo "xserver-xorg-video-$VPKG:"
    if [ -d ./xserver-xorg-video-$VPKG ]; then
        cd xserver-xorg-video-$VPKG; git pull; git fetch; cd $ROOTDIR
    else
        git clone $PKG_XORG/driver/xserver-xorg-video-$VPKG.git; \
        cd xserver-xorg-video-$VPKG; git remote add upstream $XORG_GIT/driver/xf86-video-$VPKG; \
        git fetch; cd $ROOTDIR
    fi
	echo
done

echo -e "\e[0;32mUpdating the input drivers..."
for IPKG in $INPUT; do
    echo -e "\e[0;32mxserver-xorg-video-$VPKG:"
    if [ -d ./xserver-xorg-input-$IPKG ]; then
        cd xserver-xorg-input-$IPKG; git pull; git fetch; cd $ROOTDIR
    else
        git clone $PKG_XORG/driver/xserver-xorg-input-$IPKG.git; \
        cd xserver-xorg-input-$IPKG; git remote add upstream $XORG_GIT/driver/xf86-input-$IPKG; \
        git fetch; cd $ROOTDIR
    fi
	echo
done

echo -e "\e[1;34mUpdating the apps..."
echo -e "\e[1;34mNote: debian repos only"
for APKG in $APP; do
	echo -e "\e[1;34m$APKG:"
	if [ -d ./$APKG ]; then
		cd $APKG && git pull; cd $ROOTDIR
	else
		git clone $PKG_XORG/app/$APKG.git
	fi
done

echo -e "\e[0;32mUpdating the protos..."
for PPKG in $PROTO; do
	echo -e "\e[0;32m$PPKG:"
	if [ -d ./x11proto-$PPKG ]; then
		cd x11proto-$PPKG && git pull; git fetch; cd $ROOTDIR
	else
		git clone $PKG_XORG/proto/x11proto-$PPKG.git; \
		cd x11proto-$PPKG && git remote add upstream $XORG_GIT/proto/"$PPKG"proto; \
		git fetch; cd $ROOTDIR
	fi
done

echo -e "\e[1;34mUpdating the libs..."
for LPKG in $LIBS; do
	echo -e "\e[1;34m$LPKG:"
	if [ -d ./$LPKG ]; then
		cd $LPKG && git pull; git fetch; cd $ROOTDIR
	else
		FDOPKG=$(debpkg_to_fdopkg $LPKG)
		FDODIR=$(fdogitdir_for_fdopkg $FDOPKG)
		FDOGIT=git://anongit.freedesktop.org/git/${FDODIR:+$FDODIR/}$FDOPKG
		git clone $PKG_XORG/lib/$LPKG.git; \
		cd $LPKG && git remote add upstream $FDOGIT; git fetch; cd $ROOTDIR
	fi
done

exit 0
