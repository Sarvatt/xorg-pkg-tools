# xorg-pkg-tools.lib
#
# Library of general purpose bash routines to share amongst
# the xorg-pkg-tools scripts.
#
# All routines in this library must be runnable non-interactively.

# Defaults
QUIET=${QUIET:-0}

########################################################################
## General Purpose Routines
msg() {
    if [ ${QUIET:-0} -lt 1 ]; then
        echo $1
    fi
}

warn() {
    echo "Warning:  $1" 1>&2
}

die() {
    echo "ERROR:  $1" 1>&2
    exit 1
}

########################################################################
## Git Routines

# Prints the branch id with leading 'v' removed
git_branch_id() {
    branch=$1
    branch_id=$((git describe $branch))
    echo ${branch_id#v}
}


########################################################################
## Xorg-specific Routines

# Return the fdo form of a debian package name
debpkg_to_fdopkg() {
    pkg=$1

    if [ "$pkg" = "libdmx" -o \
         "$pkg" = "libfontenc" -o \
         "$pkg" = "liblbxutil" -o \
         "$pkg" = "libpciaccess" -o \
         "$pkg" = "libxkbui" -o \
         "$pkg" = "libxkbfile" -o \
         "$pkg" = "libxtrans" ]; then
        echo $pkg
        return
    fi

    if [ "$pkg" = "libdrm" ]; then
        echo "drm"
        return
    fi

    echo ${pkg} \
    | sed -e "s/^xorg-server$/xserver/" \
        | sed -e "s/^xserver-xorg-/xf86-/" \
        | sed -e "s/^x11proto-core$/x11proto/" \
        | sed -e "s/^x11proto-\(.*\)$/\1proto/" \
        | sed -e "s/^xfonts-encodings$/encodings/"\
        | sed -e "s/^libfs$/libFS/" \
        | sed -e "s/^libice$/libICE/" \
        | sed -e "s/^libsm$/libSM/" \
        | sed -e "s/^libxcalibrate$/libXCalibrate/" \
        | sed -e "s/^libxres$/libXRes/" \
        | sed -e "s/^libxscrnsaver$/libXScrnSaver/" \
        | sed -e "s/^libxtrap$/libXTrap/" \
        | sed -e "s/^libxprintapputil$/libXprintAppUtil/" \
        | sed -e "s/^libxvmc$/libXvMC/" \
        | sed -e "s/^libxprintutil$/libXprintUtil/" \
        | sed -e "s/^lib\([a-z]\)/lib\U\1/" \
        | sed -e "s/^lib\(.*\)wm$/lib\1WM/"
}

# Return the debian form of a freedesktop.org Xorg package name
# NOTE:  This doesn't handle grouped packages (like xapps and fonts)
fdopkg_to_debpkg() {
    echo ${1} \
        | sed -e "s/^xserver$/xorg-server/" \
        | sed -e "s/^xf86-/xserver-xorg-/" \
        | sed -e "s/^x11proto$/x11proto-core/" \
        | sed -e "s/^\(.*\)proto$/x11proto-\1/" \
        | sed -e "s/^encodings$/xfonts-encodings/" \
        | tr A-Z a-z
}

# Determines the corresponding git dir for a given fdo package
fdogitdir_for_fdopkg() {
    fdopkg=$1
    if [ -z "${fdopkg}" ]; then
        echo ""
    elif [ ${fdopkg} = "pixman" ]; then
        echo ""
    elif [ ${fdopkg} = "xserver" ]; then
        echo "xorg"
    elif [ ${fdopkg} = "drm" -o  ${fdopkg} = "mesa" ]; then
        echo "mesa"
    elif [ ${fdopkg} = "xf86-video-nouveau" ]; then
    echo "nouveau"
    elif [ ${fdopkg} = "xf86-video-avivo" ]; then
        echo "avivo"
    elif [ ${fdopkg#xf86-} != ${fdopkg} ]; then
    echo "xorg/driver"
    elif [ ${fdopkg#lib} != ${fdopkg} ]; then
        echo "xorg/lib"
    elif [ ${fdopkg%proto} != ${fdopkg} ]; then
        echo "xorg/proto"
    elif [ ${fdopkg} = "bitmaps" -o ${fdopkg} = "cursors" ]; then
        echo "xorg/data"
    elif [ ${fdopkg} = "xorg-docs" -o ${fdopkg} = "xorg-sgml-doctools"
    ]; then
        echo "xorg/doc"
    else
        # Hard to say, could be xorg/app, xorg/font, or xorg/util
        die "Unknown Freedesktop git directory"
    fi
}

# Determines Debian git subdir for the debian package
debgitdir_for_debpkg() {
    debpkg=$1

    if [ -z "${debpkg}" ]; then
        echo ""
    elif [ ${debpkg} = "xorg-server" ]; then
        echo "pkg-xorg/xserver"
    elif [ ${debpkg#xserver-xorg-} != ${debpkg} ]; then
        echo "pkg-xorg/driver"
    elif [ ${debpkg#lib} != ${debpkg} -o ${debpkg} = "mesa" -o ${debpkg}
        = "pixman" -o ${debpkg} = "xft" -o ${debpkg} = "xtran\
s" ]; then
        echo "pkg-xorg/lib"
    elif [ ${debpkg#x11proto-} != ${debpkg} ]; then
        echo "pkg-xorg/proto"
    elif [ ${debpkg} = "xbitmaps" -o ${debpkg} = "xcursors-themes" -o
        ${debpkg} = "xkb-data" ]; then
        echo "pkg-xorg/data"
    elif [ ${debpkg} = "xorg-docs" -o ${debpkg} = "xorg-sgml-doctools"
        ]; then
        echo "pkg-xorg/doc"
    elif [ ${debpkg/compiz/} != ${debpkg} ]; then
        echo "pkg-xorg/bling"
    elif [ ${debpkg#x11-} != ${debpkg} ]; then
        # Not a complete listing - but this should get the grouped app pkgs
        # which are the main things we care about.
        echo "pkg-xorg/app"
    elif [ ${debpkg} = "xsfb" -o ${debpkg} = "doc-hackers" ]; then
        echo "pkg-xorg"
    elif [ ${debpkg} = "xorg" ]; then
        echo "pkg-xorg/debian"
    else
        # Hard to say, could be xorg/app, xorg/font, or xorg/util
        die "Unknown Debian git directory"
    fi
}
