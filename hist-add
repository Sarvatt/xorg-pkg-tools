#!/bin/bash

# TODO:  Document the options

# Include the bash library functions
. $(dirname $0)/xorg-pkg-tools.lib

usage() {
    write_msg "Usage:  $0 -p <pkg> -d <git-dir> -r <git-repo> -t <tag-pattern>"
    write_msg ""
    write_msg "Initializes a git clone in current directory for historical snapshots."
    exit 1
}

# Defaults
EPOCH=''
ADDVERSION="-0ubuntu0"
UPDATE_AUTOCONF=1
AUTOSIGN=${AUTOSIGN:-55955A6B}

while getopts "a:d:e:k:p:r:t:h\?" opt; do
    case "$opt" in
        a ) ADDVERSION="$OPTARG"       ;;
        c ) UPDATE_AUTOCONF="$OPTARG"  ;;
        d ) GIT_DIR="$OPTARG"          ;;
        e ) EPOCH="$OPTARG"            ;;
        k ) AUTOSIGN="$OPTARG"         ;;
        p ) PKG_NAME="$OPTARG"         ;;
        r ) GIT_REPO="$OPTARG"         ;;
        t ) TAG_PATTERN="$OPTARG"      ;;
        h ) usage                      ;;
        \?) usage                      ;;
        * ) usage                      ;;
    esac
done
shift $(($OPTIND - 1))

[ -z "${PKG_NAME}" ] && usage
[ -z "${GIT_DIR}" ] && usage
[ -z "${GIT_REPO}" ] && usage
[ -z "${TAG_PATTERN}" ] && usage

msg "git clone $GIT_REPO"
git clone ${GIT_REPO} ${GIT_DIR} || die "Clone of $GIT_REPO failed"

cat <<EOF >${PKG_NAME}.config 
PKG_NAME=${PKG_NAME}
GIT_DIR=${GIT_DIR}
GIT_REPO=${GIT_REPO}
TAG_PATTERN=${TAG_PATTERN}
EPOCH=${EPOCH}
ADDVERSION=${ADDVERSION}
UPDATE_AUTOCONF=${UPDATE_AUTOCONF}
AUTOSIGN=${AUTOSIGN}
EOF
