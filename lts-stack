#!/bin/bash

########################################################################
# List source packages for valid binary packages
# in lts-pkg-mapping.txt
########################################################################
# Copyright (C) 2012 Canonical, Ltd.
# Author:  Bryce W. Harrington
# License: MIT license, same as X
#          (see http://www.opensource.org/licenses/mit-license.php)
########################################################################

if [ "$0" = "$(basename "$0")" ]; then
    basedir="$(dirname $(readlink -e $(which "$0")))"
else
    basedir="$(dirname $(readlink -e "$0"))"
fi

if [ -n "$1" ]; then
    release="$1"
else
    release="$(basename $(pwd))"
    if [ ! -f "${basedir}/lts-${release}-mapping.txt" ]; then
        release="unknown"
    fi
fi

set -e

mapping="${basedir}/lts-${release}-mapping.txt"

if [ ! -f "${mapping}" ]; then
    echo Error: Unknown release ${release}
    exit 1
fi

declare -A stack

if [ -d Stack ]; then
    echo "Not checking out files, assuming already done"
else
    echo "Will be renaming the following packages..."
    for line in $(awk '{print $1}' "${mapping}"); do
	if [ -z "${line}" ] || [ ${line:0:1} = '#' ]; then
	    continue
	fi
	source_package=$(apt-cache showsrc ${line} | grep ^Package: | head -n 1 | cut -d' ' -f2)
	if [ $? = 0 ] && [ ! -z "$source_package" ]; then
	    if [ -z ${stack[$source_package]} ]; then
		echo ${source_package}
		stack[$source_package]=${source_package}
	    fi
	else
	    echo "Error: No source found for ${line}" 1>&2
	fi
    done

    echo
    echo "Downloading source packages..."

    mkdir -p Stack
    cd Stack

    for pkg in ${stack[@]} ; do
        echo -n $pkg
        apt-get -qq source $pkg
        echo .
    done

    echo
    echo "Packages downloaded.  Proceeding with rename..."
    cd ..
fi

if [ -d Stack-lts ]; then
    rm -rf -- Stack-lts/*
fi
mkdir -p Stack-lts/drivers

cd Stack-lts
cp -r ../Stack/*/ ../Stack/*.orig.tar.* .
for n in xf86* xserver-xorg-* glamor*; do
    if [ -e "${n}" ]; then
        mv "${n}" drivers/
    fi
done

for pkgdir in */ drivers/*; do
    if [ ! -d "${pkgdir}/debian" ]; then continue; fi
    # Location of last rename attempt, this allows for automated integration of changelogs
    oldstack="`pwd`/../Prev"
    pushd "$pkgdir"
    "${basedir}/lts-pkg-rename" "${mapping}" "${oldstack}"
    popd >/dev/null
done

echo "Done!"
